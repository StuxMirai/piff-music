name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          cache: true

      - name: Derive version from manifest.json
        id: version
        run: |
          TAG="v$(jq -r .version piffmusic/manifest.json)"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Using tag: $TAG"

      - name: Build Windows executables
        env:
          GO111MODULE: "off"
        run: |
          mkdir -p dist
          GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -trimpath -ldflags "-s -w" -o dist/piff-music-windows-amd64.exe ./main.go
          GOOS=windows GOARCH=arm64 CGO_ENABLED=0 go build -trimpath -ldflags "-s -w" -o dist/piff-music-windows-arm64.exe ./main.go

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Sign and upload Firefox add-on (AMO)
        working-directory: piffmusic
        env:
          WEB_EXT_API_KEY: ${{ secrets.MOZILLA_JWT_ISSUER }}
          WEB_EXT_API_SECRET: ${{ secrets.MOZILLA_JWT_SECRET }}
        run: |
          npx --yes web-ext sign \
            --channel=listed \
            --artifacts-dir ../dist \
            --api-key "$WEB_EXT_API_KEY" \
            --api-secret "$WEB_EXT_API_SECRET"

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > SHA256SUMS.txt

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.TAG }}
          name: ${{ env.TAG }}
          commit: ${{ github.sha }}
          allowUpdates: true
          artifacts: "dist/*"
          artifactErrorsFailBuild: true
          draft: false
          prerelease: false


